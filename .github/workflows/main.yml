name: CI Release ðŸ“¦

on:
  push:
    branches:
      - main

jobs:
  version:
    name: Create version number
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          token: ${{ secrets.GH_TOKEN }}
      - name: Fetch all history for all tags and branches
        run: |
          git fetch --prune --depth=10000
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.15
        with:
          versionSpec: "5.11.1"
      - name: Use GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.15
      - name: Create version.txt with NuGetVersionV2
        run: echo -n ${{ steps.gitversion.outputs.NuGetVersionV2  }} > version.txt
      - name: Upload version.txt
        uses: actions/upload-artifact@v2
        with:
          name: gitversion
          path: version.txt
  build:
    name: Build and Create release
    needs: [version]
    runs-on: ubuntu-latest
    if: ${{ contains(github.event.head_commit.message, '#release') }}
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - name: Get version.txt
        uses: actions/download-artifact@v2
        with:
          name: gitversion
      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version.txt
      - name: Archive Release
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: "zip"
          filename: "EFI-${{ steps.version.outputs.content }}.zip"
          path: "EFI"
      - name: Upload Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "EFI-${{ steps.version.outputs.content }}.zip"
          token: ${{ secrets.GH_TOKEN }}
          tag: ${{ steps.version.outputs.content }}
          commit: ${{ github.sha }}
